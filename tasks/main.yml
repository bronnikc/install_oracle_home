---
   - debug: msg="Start install Oracle Database software for {{ type_install }} type installation"
  #  - block:  
  #     - name: Check existing oracle_home
  #       stat: 
  #         path: "{ oracledb.ora_inventory_file }}"
  #       register: inv     
  #     - lineinfile:
  #         path: "{ oracledb.ora_inventory_file }}"
  #         regexp: "^<HOME NAME.*{{ oracledb.oracle_home }}"
  #         state: absent
  #       check_mode: yes
  #       register: home_exists
  #       when: inv.stat.exists
  #     - fail:
  #         msg: "ORACLE_HOME={{ oracledb.oracle_home }} already exists!!! Please change ORACLE_HOME"
  #       when:  home_exists.changed  and home_exists is not skipped
  #    become: true
  #    become_user: "{{ oracledb.user }}"
  #    tags:
  #      - check_oracle_home         
   - include_tasks: rac_install.yml
     when: type_install == 'db_rac'    
   
#           template: src=install-{{ oracle_version }}.rsp.j2 dest={{ oracle_distr }}/install-{{ oracle_version }}.rsp mode=660
  #  - block:
  #     - name: install preinstall package
  #       yum: name={{packages}} state=present
  #     - name: disable firewall
  #       service: name=firewalld state=stopped enabled=false
  #     - name: gen oracle password
  #       user: 
  #        name: "{{ oracledb.oracle_user }}" 
  #        password: "{{ oracle_password  | password_hash('sha512') }}" 
  #    when: type_install == 'db_single' and not inv.stat.exists
  #    become: true 
  #  - name: create directories
  #    file: 
  #        path: "{{ item }}"
  #        state: directory
  #        mode: 0775
  #        owner: "{{ oracledb.user }}"
  #        group: "{{ oracledb.group }}"
  #    with_items:
  #      - "{{ oracledb.oracle_base }}"
  #      - "{{ oracledb.oracle_home }}"
  #      - "{{ oracledb.oracle_inventory }}"
  #      - "{{ oracle_distr }}"
  #    become: true  
  #  - name: Unpack Oracle  Database Software
  #    unarchive:  
  #     src:  "{{ ora_archive_file_url }}"   
  #     dest: "{{ oracle_distr }}"
  #     remote_src: yes 
  #     owner: "{{ oracledb.user }}"
  #     group: "{{ oracledb.group }}"
  #    become: true  
  #    become_user: "{{ oracledb.user }}"
  #    tags:
  #      - unzip
#    - name: Setup Oracle Database Software silent response file
#      become: true
#      become_user: "{{ oracle_user }}"
#      template: src=install-{{ oracle_version }}.rsp.j2 dest={{ oracle_distr }}/install-{{ oracle_version }}.rsp mode=660
#      tags:
#        - db_setuprspfile

#    - name: Install  Database Software
#      become: true
#      become_user: "{{ oracle_user }}"
#      shell: 
#         cmd: "{{ database_install_dir }}/runInstaller -silent -showProgress -responseFile {{ oracle_distr }}/install-{{ oracle_version }}.rsp  -ignoreSysPrereqs  -waitForCompletion"
#      register: install_log
#      ignore_errors: yes
#      tags:
#       - db_setup
#       - setup_all
#    - debug: var=install_log
#      tags:
#       - db_setup
#       - setup_all   
#   #  - fail:
#   #      msg: "Error in runInstaller - {{install_log}}"
#   #    when:   nstall_log.failed==true
#   #    tags:
#   #      - db_setup
#    - name: Execute orainstroot.sh
#      shell:
#        cmd: "{{ oracle_inventory }}/orainstRoot.sh" 
#      register: roots
#      tags:
#          - exeorainventory 
#          - setup_all
#    - debug: var=roots
#      tags:
#       - exeorainventory
#       - setup_all      
#    - fail:
#        msg: "Error in orainstRoot.sh - {{roots}}"
#      when:  roots.failed==true
#      tags:
#        - setup_all
#        - exeorainventory 
#    - name: Execute root.sh
#      shell:
#        cmd: "{{ oracle_home}}/root.sh --silent"
#      register: root_sh
#      tags:
#          - exerootsh
#          - setup_all
#    - debug: var=root_sh
#      tags:
#       - exerootsh
#       - setup_all      
#    - fail:
#        msg: "Error in root.sh - {{root_sh}}"
#      when:  root_sh.failed==true
#      tags:
#        - setup_all
#        - exerootsh    
#    - name: copy bash_profile
#      become: true
#      become_user: "{{ oracle_user }}"
#      template: src=bash_profile.j2  dest=/home/{{oracle_user}}/.bash_profile  mode=0544
#      tags:
#      - setup_all   
#    - name: Remove stage directory  
#      file : path={{ oracle_distr }}  state=absent
#      tags:
#        - remove_stage_files
#        - setup_all
    
    
    