---
- block:
    - debug: var=_oraInv
    - name: install preinstall package
      yum: name={{packages}} state=present
    - name: disable firewall
      service: name=firewalld state=stopped enabled=false
    - name: gen oracle password
      user: 
        name: "{{ oracledb.user }}" 
        password: "{{ oracle_password  | password_hash('sha512') }}"
  become: true     
  when: not inv.stat.exists
- name:  create directories
  file: 
    path: "{{ item }}"
    state: directory
    mode: 0775
    owner: "{{ oracledb.user }}"
    group: "{{ oracledb.group }}"
  with_items:
    - "{{ oracledb.oracle_base }}"
    - "{{ oracledb.oracle_home }}"
    - "{{ oracledb.oracle_inventory }}"
    - "{{ oracle_distr }}"
  loop_control:
       label: '[created directory {{ item }}]' 
  become: true    
- name: Unpack Oracle  Database Software to dir {{ database_install_dir }}
  unarchive:  
       src:  "{{ ora_archive_file_url }}"   
       dest: "{{ oracle_distr }}"
       remote_src: yes 
       owner: "{{ oracledb.user }}"
       group: "{{ oracledb.group }}"
  become: true  
  become_user: "{{ oracledb.user }}"
  tags:
     - unzip
- name: Setup Oracle Database Software silent response file
  template: src=install-{{ oracle_version }}.rsp.j2 dest={{ oracle_distr }}/install-{{ oracle_version }}.rsp mode=660
  become: true
  become_user: "{{ oracledb.user }}"
  tags: configure_oracle_home

- name: Install  Database Software
  shell: 
    cmd: "{{ database_install_dir }}/runInstaller -silent -ignorePrereqFailure -responseFile {{ oracle_distr }}/install-{{ oracle_version }}.rsp  -skipPrereqs  -waitForCompletion"
  become: true
  become_user: "{{ oracledb.user }}"
  register: _install_log
  ignore_errors: yes
  tags: configure_oracle_home
- include_tasks: display_stdout_or_error.yml
  vars:
    _install_stdout: "{{ _install_log }}"
  when: _install_log.rc |default(0,true) !=0 or _install_log.stderr|default('',true) != '' or display_output
  tags: configure_oracle_home

- name: Run orainstRoot.sh
  shell:
    cmd: "{{ oracledb.oracle_inventory }}/orainstRoot.sh > {{ oracle_distr }}/oraintsrootsh.log" 
  register: _orainstroot_stdout
  become: true
  tags: configure_oracle_home
- include_tasks: display_stdout_or_error.yml
  vars:
    _install_stdout: "{{ _orainstroot_stdout }}"
  when: _orainstroot_stdout.rc |default(0,true) !=0 or _orainstroot_stdout.stderr|default('',true) != '' or display_output
  tags: configure_oracle_home


- name: Run Root.sh 
  shell:
    cmd: "{{ oracledb.oracle_home }}/root.sh > {{ oracle_distr }}/rootsh.log"
  become: true 
  register: _rootsh_stdout  
  tags: configure_oracle_home
- include_tasks: display_stdout_or_error.yml
  vars:
    _install_stdout: "{{ _rootsh_stdout }}"
  when: _rootsh_stdout.rc |default(0,true) !=0 or _rootsh_stdout.stderr|default('',true) != '' or display_output
  tags: configure_oracle_home